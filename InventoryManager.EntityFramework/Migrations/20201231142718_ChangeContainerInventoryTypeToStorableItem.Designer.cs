// <auto-generated />
using System;
using InventoryManager.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventoryManager.EntityFramework.Migrations
{
    [DbContext(typeof(InventoryManagerDbContext))]
    [Migration("20201231142718_ChangeContainerInventoryTypeToStorableItem")]
    partial class ChangeContainerInventoryTypeToStorableItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("InventoryManager.Domain.Models.Item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.StorableItem", b =>
                {
                    b.HasBaseType("InventoryManager.Domain.Models.Item");

                    b.Property<Guid?>("Containerid")
                        .HasColumnType("TEXT");

                    b.HasIndex("Containerid");

                    b.HasDiscriminator().HasValue("StorableItem");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.Container", b =>
                {
                    b.HasBaseType("InventoryManager.Domain.Models.StorableItem");

                    b.Property<bool>("IsRootContainer")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaximumCarryWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Container");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.StorableItem", b =>
                {
                    b.HasOne("InventoryManager.Domain.Models.Container", null)
                        .WithMany("Inventory")
                        .HasForeignKey("Containerid");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.Container", b =>
                {
                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
