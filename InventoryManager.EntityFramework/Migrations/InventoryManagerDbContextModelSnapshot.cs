// <auto-generated />
using System;
using InventoryManager.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventoryManager.EntityFramework.Migrations
{
    [DbContext(typeof(InventoryManagerDbContext))]
    partial class InventoryManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("InventoryManager.Domain.Models.Container", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("CurrentCarryCapacity")
                        .HasColumnType("REAL");

                    b.Property<int?>("Inventoryid")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaximumCarryCapacity")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("_id");

                    b.HasIndex("Inventoryid");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.Inventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.InventoryItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Inventoryid")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("Item_id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("Inventoryid");

                    b.HasIndex("Item_id");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.Item", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("_id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.Container", b =>
                {
                    b.HasOne("InventoryManager.Domain.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("Inventoryid");
                });

            modelBuilder.Entity("InventoryManager.Domain.Models.InventoryItem", b =>
                {
                    b.HasOne("InventoryManager.Domain.Models.Inventory", null)
                        .WithMany("InventoryItems")
                        .HasForeignKey("Inventoryid");

                    b.HasOne("InventoryManager.Domain.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_id");
                });
#pragma warning restore 612, 618
        }
    }
}
